version: "3.9"

services:
  api:
    build:
      context: .
      args:
        VERSION: ${VERSION:-dev}
        COMMIT: ${COMMIT:-none}
        BUILD_TIME: ${BUILD_TIME:-unknown}
    image: ads-analyzer:latest
    ports:
      - "8080:8080"
    environment:
      # --- Server ---
      - PORT=8080
      - LOG_LEVEL=info

      # --- Logging (stdout | file | both) ---
      - LOG_OUTPUT=both
      - LOG_FILE_PATH=/var/log/ads-analyzer/ads-analyzer.log
      - LOG_FILE_MAX_SIZE=50
      - LOG_FILE_MAX_BACKUPS=5
      - LOG_FILE_MAX_AGE=28
      - LOG_FILE_COMPRESS=true

      # --- Metrics ---
      - METRICS_ENABLED=true

      # --- Fetcher ---
      - FETCH_TIMEOUT=5s
      - HTTP_FALLBACK=true

      # --- Cache ---
      - CACHE_BACKEND=redis
      - CACHE_TTL=10m
      - CACHE_MAX_ITEMS=10000
      - CACHE_SWEEP_MIN=500ms
      - CACHE_SWEEP_MAX=2m
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      
      # --- Rate limit ---
      - RATE_PER_SEC=10
      - RATE_BURST=20

      # --- Batch ---
      - BATCH_WORKERS=8
    volumes:
      - ./logs:/var/log/ads-analyzer
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/health"]
      interval: 10s      
      timeout: 3s        
      retries: 3         
      start_period: 10s  

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3